services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    env_file:
      - back.env
    ports:
      - "8001:8000"
    depends_on:
      - "postgres"
    volumes:
      - vectordb:/opt/app/db/vdb/data
    healthcheck:
      test: ["CMD-SHELL", "python3", "-c", "import requests; response = requests.get('http://localhost:8000/health'); exit(0) if response.status_code == 200 else exit(1)"]

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    env_file:
      - front.env
    ports:
      - "8000:8000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "python3", "-c", "import requests; response = requests.get('http://localhost:8000/health'); exit(0) if response.status_code == 200 else exit(1)"]
    
volumes:
  postgres_data:
  vectordb: